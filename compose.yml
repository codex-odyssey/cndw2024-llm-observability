x-default-policy: &default_policy
  restart: unless-stopped
  networks:
    - cndw2024

services:
  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - tempo-data:/var/tempo

  memcached:
    <<: *default_policy
    image: memcached:1.6.29
    container_name: memcached
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m # Set the maximum memory usage
      - MEMCACHED_THREADS=4 # Number of threads to use

  tempo:
    <<: *default_policy
    image: *tempoImage
    container_name: tempo
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./config/tempo.yaml:/etc/tempo.yaml
    ports:
      - "4317"  # otlp grpc
      - "4318"  # otlp http
    depends_on:
      - init
      - memcached
  
  # for otel-collector pipeline debug
  # k6-tracing:
  #   <<: *default_policy
  #   image: ghcr.io/grafana/xk6-client-tracing:v0.0.5
  #   container_name: k6-tracing
  #   environment:
  #     - ENDPOINT=otel-collector:4317
  #   restart: always
  #   depends_on:
  #     - otel-collector

  otel-collector:
    <<: *default_policy
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
    depends_on:
      - tempo

  prometheus:
    <<: *default_policy
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    <<: *default_policy
    image: grafana/grafana:11.2.0
    container_name: grafana
    volumes:
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor metricsSummary
    ports:
      - "3000:3000"

volumes:
  tempo-data:
networks:
  cndw2024:
