title,abstract
転職したらゲーム基盤システムの移行が大変だった話 ~ 数百台のアプリをGKE化、CloudSQL化させて苦労したこと勘所 ~,"既存アプリをk8sやマネージドサービスなどに移行する時、どこから始めればいいのか、何が変わるのか、わからないと思ったことはありませんか？
私達も数年かけてVMベースのアプリをGCP移設する中で、いつ落ちるか分からないk8sへの移行、クラウドの世界での性能改善、マネージドDB化による構成変更など、アプリ・インフラ双方で様々な壁にぶつかってきました。
本発表では私達が乗り越えてきた壁とその解決策についてお伝えします。"
3人チームでも運用できるパルワールドのクラウドネイティブ技術,発売1ヶ月で総プレイヤー数2500万人を記録したパルワールドのインフラは、クラウドとKubernetesの機能を最大限活用しながら、3名の小規模チームにより運用されています。ユーザーがマルチプレイで遊ぶためのゲームサーバーをKubernetesで上手く扱う手法や、メトリクスに基づくコスト効率化など、プロダクトの運用フェーズをよりコンパクトにするための手法や考え方をご紹介します。
UPSIDERのアプリケーションを支える、高セキュリティ・高可用・高スケーラブルなプラットフォーム,UPSIDERの法人カード事業で求められるセキュリティとパフォーマンス、スケーラビリティを実現するため、GKEを活用したマイクロサービスアーキテクチャを紹介します。秘匿性の高いデータの分離を意識したシステムアーキテクチャーやObservability改善の事例、また事業拡大をするなかで、ある程度の自由度を保ちながらの拡大してきた開発体制の取り組みもご紹介します。
AI で加速するクラウドネイティブな開発体験,開発の効率化が求められる中、クラウド上での開発体験向上がトレンドになっています。コンテナベースのオンデマンドな開発環境は、必要なリソースを瞬時に提供し、開発スピードを加速させます。その上で、すでに一般的になっている AI による開発支援を組み合わせることでさらなる開発体験の向上が可能になっており、その利用はクラウド運用まで広がっています。本セッションでは、Google Cloud を例にこれらの開発者のための環境についてお話します。
生成AIのDevOps活用とLLMアプリの効率的な監視、改善、保護,"生成AI・LLMをDevOpsに活かすことと生成AIを監視して提供品質やセキュリティを担保することが大きな課題です。
本セッションではオブザーバビリティとセキュリティの統合基盤であるDatadogを用いたAIOpsと生成AIの監視についてご紹介します。ハルシネーション防止やユーザー感情の観測などでLLMアプリケーションを効率的に監視、改善、保護する方法を学びましょう。"
120万口座を支える証券システムのクラウド運用内製化とクラウドネイティブへの挑戦,"PayPay証券は、証券会社としては後発ですが、現在120万を超える口座を抱えています。2016年の開始当初からAWSを利用していますが、運用は外部へ委託しており、クラウドネイティブな作りではありませんでした。
2023年より、新NISAの取り扱い開始のタイミングもあり、ユーザ増加を見越してサービス改善を図るため、クラウド運用の内製化や組織改革を始め、IaCの導入、コンテナ化、コスト最適化、セキュリティ強化などに取り組み、モダン化を進めています。
本セッションでは、これらの取り組みについて、証券業界固有の考慮点も交えてお話します。
"
PlayStation NetworkにおけるKubernetesマニフェスト管理の物語,"40以上のサービスチーム、1000人近くのPlayStation Network開発者が利用しているInternal Developer Platformを開発運用するエンジニアリングチームとして、Kubernetesのマニフェストファイルを中央集権的に提供することはチャレンジの連続だった——

本セッションでは、Helmのsubchartを活用してセキュリティやコスト管理などのガバナンスを強化しつつ、開発言語やワークロード、パブリッククラウドのアカウントも異なるサービスに対して、最小限の記述で必要なものを設定できるchartを構成する方法について紹介します。
また、Helmを利用していることで発生した問題や解決のために取った手法についてもお話しします。"
成熟度別 Platform Engineering アーキテクチャ道場！,"Platform Engineeringは、現代のソフトウェア開発において注目を集める重要なトレンドです。ガートナーの予測によると、2026年までに80%の大規模ソフトウェアエンジニアリング組織がプラットフォームチームを設立すると言われています。しかし、Platform Engineering を実現しているのは一部の技術的に秀でた企業のみであり、多くの企業にとって、具体的な実装方法は依然として不明確です。
本セッションでは、Platform Engineeringの成熟度モデルごとに、各段階に応じた具体的なリファレンスアーキテクチャを提示します。これにより、参加者は自社の現状を把握し、Platform Engineeringを単なるバズワードから実践的なソリューションへと昇華させる具体的な方法論を学ぶことができます。
成熟度モデルとリファレンスアーキテクチャを活用することで、各組織に適したPlatform Engineeringの実装が可能となり、ソフトウェア開発の効率化と品質向上を実現できるでしょう。"
Amazon ECSとCloud Runの相互理解で広げるクラウドネイティブの景色,"本セッションでは、AWSとGoogle Cloudにおけるネットワークやアーキテクチャデザイン時の違いを解説しつつ、各クラウドの代表的なコンテナサービスであるAmazon ECSとCloud Run両者の理解を深める手助けをします。
いずれかのサービスに触れたことのある方が、既存のメンタルモデルを活かしながらもう一方のサービスを深く理解することで、コンテナ技術に精通するエンジニアとしてさらなる成長を遂げるためのヒントを提供します。"
今はまだ小さい東京ガス内製開発チームが、これからもKubernetesと共に歩み続けるために,"東京ガス内製開発チームはマイクロサービス化のプラットフォームとしてKubernetes(Amazon EKS)を選択しました。そして2024年11月、いよいよ最初のサービスがリリースされます。約一年弱、二人で構築したこのプラットフォームは、Istio, ArgoCD, Karpenter…様々なエコシステムを活用しています。このエコシステムとKubernetesと共に、我々は歩みを止めずに""クラウドネイティブ""であり続けられるのか。そしてエコシステムの恩恵を""享受する""だけでいいのか。小さな一歩を踏み出したチームが、リリースに至るまでに得た知見を共有すると共に、これからKubernetesを始める皆さんに小さな勇気を与えられたら幸いです。"
AWSセキュリティの最適解！セキュリティ人材不足でも包括的かつ効率的に対策を行う方法,"サイバー攻撃が増加する中、セキュリティ対策は重要な経営課題となっています。AWSの利用においても、対応が求められるセキュリティ課題は多岐にわたります。
しかし、多くの企業がエンジニア不足に直面し、必要な人材を確保できないという課題を抱えているのではないでしょうか。
本セッションでは、セキュリティ人材が不足している状況でも工数を削減し包括的なクラウドセキュリティ対策を実現する方法をご紹介します。"
IT運用を包括的に支える新しい自動化プラットフォームとセルフサービス化の実現へ向けて,IBM Rapid Network Automationは、Pliant社の技術を基盤とした自動化プラットフォームで、ネットワーク自動化に留まらず、IT運用全体を包括的にサポートします。ハイブリッド・マルチクラウド環境にも柔軟に対応し、セルフサービス化を実現する具体的な活用方法や、クラウドネイティブ環境での自動化の利点について詳しく解説します。IT運用の効率化と迅速化を目指す企業にとって、必見の内容です。
Kubernetes環境のオブザーバビリティの次の一歩をOpenTelemetryで実現すると何がどうなるの？,本セッションでは、KubernetesやPrometheusに詳しいプラットフォームエンジニア向けに、オブザーバビリティの次のステージを実現するためのOpenTelemetry活用法を解説します。Kubernetes環境における実践例を通じて、メトリクスやトレースの統合による運用効率向上と、リアルタイムな可視化の価値を探ります。また、Splunk Observability製品との連携によって得られる効果的なモニタリングと課題解決のアプローチもご紹介します。
間違いだらけのポストモーテム - ホントに役立つレビューはこうだ!,"みなさんはシステム障害発生後に、きちんとレビューをしていますか？ SREのプラクティスではポストモーテムと呼ぶこともありますね。

ポストモーテムを行うことは、将来のインシデント防止に向けてとてもとても大事です。 インシデント対応そのものよりも大事とすら言えます。ですが、それほど大事なものなにも関わらず、「正しく」レビューが出来ているケースはそれほど多くありません。

本セッションでは、インシデントを組織の成長機会に繋げていきたいという人に向けて、インシデントという体験から学び組織を強化するベストプラクティスについてお話しします。BlamelessからBlame-awareに、ポストモーテムからポストインデントレビューに。これまであまり語られてこなかった、インシデント後のレビュー方法についてヒントとなる話をします。"
Mastering Cloud Native API Gateway with Envoy,"API をホスティングするための様々な共通課題を解決する API Gateway パターンは、クラウドネイティブ環境でも広く利用されているアーキテクチャパターンです。
本セッションでは、クラウドネイティブなネットワークプロキシーである「Envoy」を用いた API Gateway パターンの実践について、下記のトピックを交えつつ解説します！

- API Gateway パターンの基礎と実践例
- フィルターや xDS、サービスメッシュでの利用例をはじめとした Envoy の基礎
- Envoy の External Authorization・External Processing フィルターを用いたリクエストの検証
- WebAssembly を用いた Envoy の拡張
- CUE を用いた Envoy の設定の管理"
実践/先取り「入門 Kubernetes Validating/Mutating Admission Policy」,"マルチテナントの Kubernetes クラスタでは他のテナントに影響を与えないためにポリシ制御によるガードレールを厳密に運用する必要があります。従来、その実現には Validating/Mutating Admission Webhook や Gatekeeper/Kyverno 等のサードパーティアドオンが使用されていますが、運用やパフォーマンスに課題があります。

PFN では、それらの課題が解決された「Validating Admission Policy (v1.30 で GA)」を早くから実践導入しており、ポリシのテストの課題に対して今年のインターンシップで「kaptest (https://github.com/pfnet/kaptest)」を開発しオープンソースで公開しました。また、今後 Kubernetes に実装予定の「Mutating Admission Policy」への移行についてインターンシップにおいて調査、検証を行いました。

本発表は、PFN のマルチテナントクラスタにおける  Validating Admission Policy の活用事例と OSS で公開したテストツール、また Mutating Admission Policy の調査検証結果についてインターン生と合同で共有します。仕組みからポリシテストの実践まで、初学者からすでに使用されている中級者まで楽しんでいただける内容です。"
乗っ取れKubernetes！！ ~リスクから学ぶKubernetesセキュリティの考え方~,"Kubernetesを活用する上で、コンテナに対するセキュリティ対策はもちろんのこと、その実行環境であるKubernetesクラスタに対する対策もまた重要です。
いくらコンテナに対策を行っていても、Kubernetesクラスタそのものに対する対策が不十分だと、最終的にコンテナをリスクに晒してしまうことに繋がります。
しかしKubernetesクラスタに関するセキュリティリスクや対策と言われても、具体的にピンとこないという方も多いのではないでしょうか。
本セッションでは過去実際にあった攻撃事例に基づくデモを通じて、主にKubernetesクラスタに焦点を当てたリスクの具体例や、それと関連付けて様々な対策手法がどのような効果を発揮するか順を追って解説します。"
Engineer Enabling！2000名超のエンジニアを支えるGitOps運用ノウハウを大公開　～GitHub Actionsセルフホステッドランナーを完全プライベートEKSで実現～,"エンジニアの生産性最大化をミッションに持つ私たちのチームでは、セキュリティにも最大限配慮した、完全プライベートEKSを基盤とするGitHub Actionsセルフホステッドランナーを全社展開しています。
多様なビルド環境を素早く構築するための仕組み作りや、ビルド速度を向上させるためのチューニング、キャッシュ機構の活用など、数百を超える様々な開発チームがより開発に集中できる環境を提供しています。
運用面においても、年3回のアップグレードをユーザ影響無く安全に実施するためのBlueGreenデプロイメントや機能リリースを楽にするためのGitOps、スケーリングコントロールによるコスト削減に関する工夫も行っています。
大規模な開発体制における、開発生産性と運用・セキュリティの両立に関するウハウを解説します。"
KubernetesクラスタにおけるDify商用環境構築のノウハウ,当社は2024年に、コード不要でAIアプリを構築できる「Dify」をKubernetes上で商用環境に導入しました。その過程でリソース管理、スケーラビリティ、セキュリティ対策などの課題を解決しました。本発表では、Difyの最適設定方法、高可用性とセキュリティの確保、実運用でのベストプラクティスを紹介します。また、カスタムAI質問応答アシスタントの構築事例を通じ、企業のAI導入の可能性と効果を考察します。
EKSバージョンアップ工数削減大作戦！~Terraform化とE2Eテスト自動化~ ,EKS（Kubernetes）の運用には欠かせない、定期的なバージョンアップ作業。kubellでは、主要プロダクトである「Chatwork」が稼働しているEKSクラスタをTerraform化してボタン一つで構築できるようにしました。また、本番稼働前のE2EテストをKubernetesのE2Eテストツール「kibertas」を使って自動化することでEKSのバージョンアップ作業の工数削減を実現しました。
マイクロサービスアーキテクチャへのモチベーション整理とその複雑性に対する落としどころ,"クラウドネイティブ環境でのアプリケーション開発が進む中、マイクロサービスアーキテクチャは、モノリシックなシステムに代わる柔軟でスケーラブルな選択肢として注目を集めています。
しかし、マイクロサービス導入にあたっては、設計や運用の複雑さが課題となることが少なくありません。

当セッションでは、マイクロサービスアーキテクチャに取り組むメリットとモチベーションの整理を行った上で
実際のプロジェクトで直面する複雑性にどのように向き合う方法があるのか、現実的な落としどころについて、お話します。"
50以上のマイクロサービスを支えるアプリケーションプラットフォームの設計・構築の後悔と進化,"LegalOn Technologiesでは新プロダクトのリリースに向け、50以上のマイクロサービスを支えるGKE、Cloud Service Mesh、Argo CDなどを中心としたアプリケーションプラットフォームを1年でゼロから構築する挑戦を成功させました。多くのサービスを同時多発的に立ち上げるために、インフラに限らずアプリケーションやCIのテンプレートなど、ソフトウェア開発ライフサイクル上の様々な工夫をこらしています。一方で、マルチリージョン・マルチプロダクトを見据えた拡張を行うには、大規模な移行が必要になるような構造的課題に直面しています。
本セッションでは、リリース直前の破壊的変更、リリース後の大規模な移行、ビジョンの見直しを踏まえ「あのときこうしておけば…」という後悔ポイントを伝えることで、今後生まれるプラットフォームのより健やかな成長に貢献することを目指します。"
eBPF Deep Dive: Architecture and Safety Mechanisms,"本セッションでは、eBPFの基本的なアーキテクチャを解説し、安全性を支える重要な仕組みであるeBPF Verifierの内部実装を詳しく掘り下げます。eBPFは、CiliumやFalcoといったツールを通じて、Kubernetesにおけるセキュリティ、ネットワーキング、オブザーバビリティといった重要な領域での利用が広がっています。

オープンソースにおいては、eBPFの活用を積極的に行っているCiliumやFalcoがCNCFのGraduateプロジェクトに昇格（それぞれ2023年、2024年）し、今こそ学ぶべき技術である、と応募者である私は確信しています。

CloudNative Days Winter 2024のテーマ「小さな一歩、大きな飛躍〜クラウドネイティブを継続する〜」に沿って技術領域で一歩を踏み出し、継続していくためには、まず利用するソフトウェアがどのように動くのか、その原理原則を理解することが重要です。

セッションを通じて、eBPFがどのように機能し、既存の技術とは何が異なるのか、またどのようにして安全性を確保しているのかをお伝えします。

想定している話の流れは以下の通りです
- 3m: 自己紹介およびセッションの概要説明
- 12m: eBPFの基本的な利用方法とその流れについての解説
- 25m: eBPF を実行する仕組みについて、実際にLinux Kernelのコードを元に紹介します。例えばここではVerifier で無限ループをどのように検出するのか、どのように型検査を行うのかなどが理解できます。"
SIerで200人クラウドネイティブのファンを増やした話,"SIerが2年間で200名のエンジニアをクラウドネイティブエンジニアへと育成！
コンテナ、IaC、オブザーバビリティを軸とした実践的なハンズオンで、非クラウドエンジニアの潜在能力を引き出し、組織全体のクラウドネイティブ化を推進してきました。

本セッションでは、その成功事例と、今後、社内のクラウドネイティブファンを50%に拡大するための戦略を公開します。参加者の皆様には、実践的なノウハウだけでなく、クラウドネイティブへの熱い想いを共有します。"
Kubernetes だけじゃない！Amazon ECS で実現するクラウドネイティブな GitHub Actions セルフホストランナー,"スケーラブルな GitHub Actions セルフホストランナーを構築するための OSS として代表的なのが Kubernetes のカスタムコントローラーである ARC (actions/actions-runner-controller) ですが、我々は Amazon ECS をベースに独自で構築する方法を取りました。

「クラウドネイティブといえば Kubernetes」そんなイメージをお持ちの方も多いのではないでしょうか？本セッションでは、我々がなぜ Kubernetes 及び ARC を採用しなかったのかをチームの状況、運用保守、拡張性、エコシステムの活用の観点などで当時の意思決定を振り返り、実際に1年間運用してみて、その選択は正解だったのかをお伝えします。
また、社内に提供を開始してから改善を積み重ね、現在では1日に1万以上の Job を捌くほどになった大規模ランナーがどのように運用されているのかをお話します。グループ全体で広く利用される大規模ランナーならではの悩みや、改善に向けたアプローチも紹介します。"
LLMを「速く」「安く」動かすには,初心者にもわかりやすく、ChatGPTをはじめとした近年話題のLLM(Large Language Model)の中身について解説します。また、LLMを大規模に学習するだけではなく、LLMを動かして利用すること（推論）が重要になりつつあることを踏まえ、LLMの推論システムのサービングが難しい理由と、それに対応するための小規模化や量子化などの最近のモデルサイズを減らす工夫についてもお話しします。
LINEヤフーにおける超大規模プラットフォーム実現への挑戦と学び,"LINEヤフーでは、Webアプリケーションを効率的に運用するための、Kubernetesベースの社内プラットフォームを開発、運用しています。このプラットフォームは、国内有数の規模を誇る弊社のサービス群に対応できる規模とスケーラビリティを実現しています。
本セッションでは、このプラットフォームを実現する過程で遭遇した様々な課題と、それらを解決する中で得た学びを共有します。特にプラットフォームを漸進的に拡大するための技術的アプローチや、ユーザー獲得のための技術的、人的両面の取り組みに焦点を当ててご紹介いたします。"
クラウドコストと使用量を最適化し、ビジネス価値の最大化へと導く「FinOps」の実践アプローチのご紹介,グローバルでは単なるクラウドの活用から先に進み、クラウドへ支払う料金に対して得られる価値を最大化するための取り組みである「FinOps」の実践が当たり前になりつつある。その一方、国内では知名度も低く、コストを最適化するFinOpsの継続的な活動は、エンジニアから時間を奪うだけの存在だと考える現場もいまだに多い状況である。本セッションでは、クラウドを扱う全員が取り組むべきFinOpsの概要から、業界標準の導入/実践アプローチ手法である「FinOpsフレームワーク」について実践ノウハウを交えて紹介する。
Woven by ToyotaのFinOpsの取り組み,Woven by Toyotaが、これまで取り組んできたFinOps活動について紹介します。
Kong Konnectでマイクロサービスを統括！複数K8s環境を一元管理,Kong Konnectは、マイクロサービスを効率的に管理するための強力なプラットフォームです。複数のKubernetes環境にまたがるマイクロサービス管理を一元化し、運用の煩雑さを大幅に軽減します。さらに、サービス単位でのセキュリティポリシー適用やトラフィックの可視化などの機能も直感的に追加・管理でき、複雑なマイクロサービスアーキテクチャでもスマートに運用可能です。セキュリティとガバナンスを強化しつつ、迅速なデプロイを実現し、開発者と運用担当者の負担を大幅に軽減します。本セッションでは、複雑な環境にも柔軟に対応し、サービス提供を迅速化するKong Konnectの強力な機能を余すところなくご紹介します。
Amazon CloudFrontを活用したゼロダウンタイム実現する安定的なデプロイメント,"本講演では Amazon CloudFrontを活用してゼロダウンタイムのデプロイメントを実際のプロジェクトに導入した話について紹介します。
この手法では、二つの同一環境で新しいコードを並行して稼働させ、必要に応じてトラフィックを切り替えます。
これにより、ユーザーエクスペリエンスを損なうことなく、新機能や修正をリリースでき、ロールバックも容易にすることができました。
この手法は、クリティカルなシステム更新や、ステージング環境でのテストなど多様なユースケースで効果的です。"
障害特定が超爆速に！セブン&アイ・ネットメディアの秘密兵器〜チームの壁を超越！Observabilityで問題解決力アップ〜,"セブン＆アイ・ネットメディアは、グループ会社様システムのクラウド移行を機に、監視システムのあり方の抜本的な改革にチャレンジしています。その切り札としてObservabilityツールを導入しました。が、思ったほど活用されず...
布教活動や勉強会などの地道な活動の結果、認知度が上がり、障害対応で大活躍するように！Observabilityツールが共通言語になるまでのストーリーや効果、課題、これからトライしてみたいことなど、デモを交えながら皆さんにご紹介します！
#APM #Observability #BizDevOps #CCoE #SRE"
システムリプレイスプロジェクト発足から7年、改めてコスト最適化に向き合う,"弊社の運営するファッションECサイト「ZOZOTOWN」ではクラウド技術を活用したシステムリプレイスが2017年から進行しています。
リプレイスに伴いシステムの安定稼働率や開発者の生産性は高まったものの、多くのマイクロサービスが立ち上がり、リプレイス後のアプリケーション稼働基盤として採用されたAWSやKubernetes（EKS）は徐々に金額面でのコストバランスが合わない状態になりはじめていました。
この問題に対応すべく我々ZOZOTOWNプロダクトのSREはコスト可視化方法の整備、KarpenterやKEDAの導入など様々な施策を実施してきました。
クラウドネイティブな環境でコスト最適化に向けアクションを模索している方の参考になれば幸いです。"
クラウドネイティブなNewSQLで実現するミッションクリティカルなアプリケーションの運用,"DMMの各プロダクトが利用する共通プラットフォームの認可APIのDBについて、中長期的なリクエスト数の増加とダウンタイムが許されないミッションクリティカルなアプリケーションであることを考慮し、オンプレのMySQLからクラウドネイティブなフルマネージドNewSQLであるTiDB Cloudに移行しました。

共通プラットフォームの認可APIはDMMの各プロダクトおよび共通プラットフォームの各マイクロサービスから利用されるためダウンタイムが許されません。そのため、DB移行は無停止で実施しました。
また、DBの運用ではクラウドネイティブなDBの特徴を活かして運用時のアプリケーションへの影響を最小限に抑えています。

本セッションではオンプレからクラウドへの無停止でのDB移行と本番環境におけるTiDB Cloudの運用事例について紹介します。
これからクラウドネイティブなNewSQLを採用するか検討している人に向けて、クラウドネイティブなNewSQLを採用するか検討するときのポイントについてお話できると思います。"
気まぐれLLMのふるまいを暴け！  - OpenLLMetryを通して見る世界 - ,"OpenAI社のChatGPTを代表とし、LLM（大規模言語モデル）を利用したユースケースは数多く存在します。その活用例は、一般コンシューマ向けや企業内部でのユースケースと非常に多岐に渡るため、規模は問わず類似のアプリケーションを開発した経験がある方は多いのではないでしょうか。

LLMは便利なコンポーネントですが、動作が非決定的であり、実行してみないとどのようにふるまうか分かりません。特に、アプリケーションが複雑になると、その動作の予測がさらに難しくなります。そのため、LLMのふるまいを正確に把握するためのオブザーバービリティが重要です。

一般的なアプリケーションのログやトレース、メトリクスを扱う標準としてOpenTelemetryがあり、それをLLM向けに拡張したものがOpenLLMetryです。OpenLLMetryを活用することで、OpenTelemetryの強みを生かしつつ、LLMアプリケーションのオブザーバビリティを向上させることができます。

本セッションでは、LLMアプリケーションにおけるオブザーバビリティの課題と、OpenLLMetryを活用した解決方法を紹介します。さらに、実際のユースケースを交えたデモンストレーションを通じて、OpenLLMetryの導入がどのようにしてLLMアプリケーションの開発や運用効率を向上させるかを実践的にお見せします。"
5年で社員数3人から100人以上に！インフラのコード化とサービスのコンテナ化による、急成長する事業を支えるためのプラットフォーム戦略とは,"急成長する事業を支えるために、リソースの限られた少人数運用チームがどのようにしてプラットフォームを構築し、安定した運用を実現しているのかを、以下のような観点からログラスの具体的な事例を通じて紹介します。
・インフラを少人数で構築・運用するためにどのような仕掛けをして進めたのか？
・インフラのコード化のためにGitHubを採用した背景
・サービス基盤としてコンテナを選択した背景とその中でもECS Fargateを採用した理由とは？
・このようなインフラ構成でどのようにセキュリティ向上施策を進めたのか？

また、上記のセキュリティ向上施策の一つであるコンテナセキュリティを深掘りして紹介します。
ログラスではコンテナの振る舞い検知にOSSのFalcoをベースとしたSysdigを活用しています。世界中で広く使われているFalco自身と、便利な機能がアドオンされたSysdigについて紹介します。"
SaaSベースのスキャンで実現するWebアプリケーション/APIの脆弱性可視化と保護戦略,"クラウドネイティブ化が進んでも、アプリケーションレベルのセキュリティ確保は依然として開発者、運用者にとっての課題です。
このような課題に対して、F5では、Webアプリケーション/APIを対象とした自動ペネトレーションテストサービスやAPIセキュリティサービスを提供しています。
本セッションでは、これらのF5のソリューションを用いてどのように自社のアプリケーション保護を実現できるのかをご紹介します。"
レガシーな金融システムをKubernetesを使ってクラウドネイティブ化するためのノウハウ大全,"高い信頼性、セキュリティが求められる金融システムにおいても、昨今ではビジネスの成長や変化に柔軟に対応するためにクラウドネイティブ化の波が来ています。
金融システムをKubernetesおよびエコシステム技術を用いてクラウドネイティブ化するにあたって、自身の経験から考慮すべき点や気をつけるべき点をお伝えできればと思います。
特に、これまでオンプレ,IaaSベースの構築経験はあるもののKubernetesやクラウドネイティブ技術はまだあまり馴染みのインフラエンジニアの方に聞いて頂きたいです。"
大規模システムへの OpenTelemetry Collector 導入の勘所と OpAMP に見る未来,OpenTelemetry の導入において OpenTelemetry Collector はとても重要です。テレメトリー収集のゲートウェイとして動作しさまざまな処理を行う Collector ですが、構成要素も多く、管理は規模が大きくなるほど複雑化します。OpenTelemetry プロジェクトは Collector 設定のためのリモートプロトコルである Open Agent Management Protocol（OpAMP）を開発しており、これを用いることで管理コストの削減が期待されています。本セッションでは、Collectorの基本からはじめ、大規模構成における課題、OpAMP がどう解決するか、さらに Kubernetes 上での展開まで幅広く紹介します。
クラウドネイティブへの小さな一歩！既存VMからコンテナまで、KubeVirtが実現する『無理しないペースの移行』とは！？,"仮想マシンで動く既存アプリケーションを、どのようにクラウドネイティブ化するか迷っている方はいませんか？

いきなり全てを作り変えられないのでVM基盤は残すしか無い。かといってコンテナ基盤も用意しなくては将来への備えができない。2つの基盤を運用していくにはコストが掛かりすぎる。一体どないせぇと・・・。

そんな悩みを解決するのがCNCFプロジェクトの『KubeVirt』です。

Kubevirtでは、Kubernetes上で仮想マシンを動かすことで、コンテナも仮想マシンも共通基盤の上で統一的な運用ができます。統一基盤としてコスト抑制だけではなく、アプリケーションのクラウドネイティブ化も、先にVMとしてそのまま乗せ替えて、その後で組織規模や能力に合わせてコンテナ化していくという「無理しないペースでの移行」を実現します。

また、本セッションはそれだけに留まらず、VM運用でのGitOpsの活用など、より高度な運用スタイルについてもデモを交えてご紹介します！

"
そのCIは本当に役に立ってますか？ - 高品質なCIプロセスを実現する設計術,"現代のクラウドネイティブな環境では、プロダクトやサービスの開発からデプロイまでを高速なサイクルで数多く繰り返すことが当たり前となっており、そのような急速な開発サイクルの中でもなお高いサービス品質を保ち続けるために、継続的インテグレーション(CI)はとても重要な役割を果たしています。
しかし、長い実行時間や無意味な指摘の表出などが頻発するような質の低いCIプロセスは、逆に開発の阻害要因・ブロッカーとなってしまいます。「会社のルールだから」「トレンドだから」といった理由でCIを導入してはみたものの、CIツールから出る指摘に追われ、リリース承認のために見た目を整える作業に手間を取られて疲弊してしまう・その結果CIツールの存在が形骸化してしまうような現場も多いのではないでしょうか。
本セッションでは、CIプロセスを開発の妨げにせず、そこから出る指摘を品質向上に繋がる有意義なものにするためにどのような設定や調整をすればいいのか、CIの設計論を具体的に解説します。これにより、開発者がCIと健全な関係を築き、より効率的かつ質の高い開発環境の構築を行うための方法・マインドセットを考察します。"
メインテーマはKubernetes - 実践者のための最新ベストプラクティス,YAMLを書いた経験があり、Kubernetesの基本を理解しているエンジニアの方々に向けて、進化を続けるKubernetesエコシステムから注目すべき機能や技術を厳選し、最新情報を基にした実践的なベストプラクティスをアプリケーション開発・運用の観点から解説します。実践的なパターンをコード例と共に可能な限り紹介し、この講演を通じて皆さまのKubernetes知識を最新版にアップデートすることで、最適なアプリケーション構築スキルの向上を目指します。
大規模環境でCiliumを運用して得られた課題と知見,"サイボウズのKubernetes基盤では、CNCF Graduated Projectの一つであるCiliumをネットワークに採用しています。
Ciliumは安定したソフトウェアですが、大規模な環境で運用する際は、性能問題や不具合などに遭遇することがあります。
例えば、これまでにPodの作成遅延や特定のPodの通信不調などの問題に遭遇しています。
我々は、それらの問題をCilium本体へのコントリビューションや自作ツールの作成、チューニングといった方法で対処してきました。
本セッションではこれらの取り組みについて紹介し、これからCiliumを大規模環境で運用する方々に、サイボウズで得られた知見を共有します。"
次のコンテナセキュリティの時代 - User Namespace With a Pod,"本セッションでは GA が近づいている Kubernetes の新機能の「User Namespace」について説明します。本機能は  2016 年から要望のあったコミュニティ待望の機能です。また、「User Namespace」 を用いた Pod は過去にあったコンテナランタイムの脆弱性の多くに対して有効な防御策となります。
ただし、本機能はコンテナランタイムなどの周辺知識がないと一見何が起きているのかを理解するのが難しい側面もあります。そのため、本セッションはまず始めに現状のコンテナについての復習から入り、なぜ「User Namespace」が過去の CVE に対して有効かを説明します。その後、知識だけではなくハンズオンなどを用いて本機能のコアの部分に手を動かして触れる機会を提供します。
本セッションが「User Namespace」をあなたの環境で運用するための手助けになることを期待しています。"
Akri(アクリ)ではじめるIoTデバイス管理,AkriはCNCFサンドボックスプロジェクトで、エッジデバイス (OPC UAデバイス/カメラ/IoTセンサー/その他周辺機器など)を Kubernetes クラスターのリソースとして公開する OSSです。Akriは、デバイスにアクセスできるノードを継続的に検出し、それらに基づいてワークロードをスケジュールします。本セッションでは、はじめてIoTデバイスを管理する方に向けてAkriの基本動作と内部アーキテクチャをデモを交えて分かりやすくご紹介します。
